//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SqueakSpeak.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SqueakSpeakParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ISqueakSpeakListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] SqueakSpeakParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] SqueakSpeakParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.adorableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdorableStatement([NotNull] SqueakSpeakParser.AdorableStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.adorableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdorableStatement([NotNull] SqueakSpeakParser.AdorableStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.extraStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtraStatement([NotNull] SqueakSpeakParser.ExtraStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.extraStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtraStatement([NotNull] SqueakSpeakParser.ExtraStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.nativeCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNativeCall([NotNull] SqueakSpeakParser.NativeCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.nativeCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNativeCall([NotNull] SqueakSpeakParser.NativeCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.squeakNetGet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSqueakNetGet([NotNull] SqueakSpeakParser.SqueakNetGetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.squeakNetGet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSqueakNetGet([NotNull] SqueakSpeakParser.SqueakNetGetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.squeakIn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSqueakIn([NotNull] SqueakSpeakParser.SqueakInContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.squeakIn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSqueakIn([NotNull] SqueakSpeakParser.SqueakInContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.squeakMathCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSqueakMathCall([NotNull] SqueakSpeakParser.SqueakMathCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.squeakMathCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSqueakMathCall([NotNull] SqueakSpeakParser.SqueakMathCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.squeakOut"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSqueakOut([NotNull] SqueakSpeakParser.SqueakOutContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.squeakOut"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSqueakOut([NotNull] SqueakSpeakParser.SqueakOutContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.hugThis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHugThis([NotNull] SqueakSpeakParser.HugThisContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.hugThis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHugThis([NotNull] SqueakSpeakParser.HugThisContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.snugLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSnugLoop([NotNull] SqueakSpeakParser.SnugLoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.snugLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSnugLoop([NotNull] SqueakSpeakParser.SnugLoopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.fluffMagic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFluffMagic([NotNull] SqueakSpeakParser.FluffMagicContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.fluffMagic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFluffMagic([NotNull] SqueakSpeakParser.FluffMagicContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.snuggleIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSnuggleIf([NotNull] SqueakSpeakParser.SnuggleIfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.snuggleIf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSnuggleIf([NotNull] SqueakSpeakParser.SnuggleIfContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.snipChoose"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSnipChoose([NotNull] SqueakSpeakParser.SnipChooseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.snipChoose"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSnipChoose([NotNull] SqueakSpeakParser.SnipChooseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.snipCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSnipCase([NotNull] SqueakSpeakParser.SnipCaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.snipCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSnipCase([NotNull] SqueakSpeakParser.SnipCaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.snipDefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSnipDefault([NotNull] SqueakSpeakParser.SnipDefaultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.snipDefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSnipDefault([NotNull] SqueakSpeakParser.SnipDefaultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.bringWarmth"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBringWarmth([NotNull] SqueakSpeakParser.BringWarmthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.bringWarmth"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBringWarmth([NotNull] SqueakSpeakParser.BringWarmthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.invokeWhimsy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInvokeWhimsy([NotNull] SqueakSpeakParser.InvokeWhimsyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.invokeWhimsy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInvokeWhimsy([NotNull] SqueakSpeakParser.InvokeWhimsyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.purrMath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPurrMath([NotNull] SqueakSpeakParser.PurrMathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.purrMath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPurrMath([NotNull] SqueakSpeakParser.PurrMathContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.leftExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeftExpr([NotNull] SqueakSpeakParser.LeftExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.leftExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeftExpr([NotNull] SqueakSpeakParser.LeftExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.objectCreation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectCreation([NotNull] SqueakSpeakParser.ObjectCreationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.objectCreation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectCreation([NotNull] SqueakSpeakParser.ObjectCreationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.fieldAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldAssignment([NotNull] SqueakSpeakParser.FieldAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.fieldAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldAssignment([NotNull] SqueakSpeakParser.FieldAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] SqueakSpeakParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] SqueakSpeakParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.purrOperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPurrOperation([NotNull] SqueakSpeakParser.PurrOperationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.purrOperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPurrOperation([NotNull] SqueakSpeakParser.PurrOperationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.purrOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPurrOperator([NotNull] SqueakSpeakParser.PurrOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.purrOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPurrOperator([NotNull] SqueakSpeakParser.PurrOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.fieldAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldAccess([NotNull] SqueakSpeakParser.FieldAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.fieldAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldAccess([NotNull] SqueakSpeakParser.FieldAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.purrTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPurrTerm([NotNull] SqueakSpeakParser.PurrTermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.purrTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPurrTerm([NotNull] SqueakSpeakParser.PurrTermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.nativeCallExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNativeCallExpr([NotNull] SqueakSpeakParser.NativeCallExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.nativeCallExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNativeCallExpr([NotNull] SqueakSpeakParser.NativeCallExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.baseTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBaseTerm([NotNull] SqueakSpeakParser.BaseTermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.baseTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBaseTerm([NotNull] SqueakSpeakParser.BaseTermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayLiteral([NotNull] SqueakSpeakParser.ArrayLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayLiteral([NotNull] SqueakSpeakParser.ArrayLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] SqueakSpeakParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] SqueakSpeakParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamList([NotNull] SqueakSpeakParser.ParamListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamList([NotNull] SqueakSpeakParser.ParamListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] SqueakSpeakParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] SqueakSpeakParser.ParamContext context);
}
