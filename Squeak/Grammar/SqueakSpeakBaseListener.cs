//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SqueakSpeak.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISqueakSpeakListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SqueakSpeakBaseListener : ISqueakSpeakListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] SqueakSpeakParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] SqueakSpeakParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.adorableStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdorableStatement([NotNull] SqueakSpeakParser.AdorableStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.adorableStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdorableStatement([NotNull] SqueakSpeakParser.AdorableStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.extraStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtraStatement([NotNull] SqueakSpeakParser.ExtraStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.extraStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtraStatement([NotNull] SqueakSpeakParser.ExtraStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.nativeCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNativeCall([NotNull] SqueakSpeakParser.NativeCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.nativeCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNativeCall([NotNull] SqueakSpeakParser.NativeCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.squeakNetGet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSqueakNetGet([NotNull] SqueakSpeakParser.SqueakNetGetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.squeakNetGet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSqueakNetGet([NotNull] SqueakSpeakParser.SqueakNetGetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.squeakIn"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSqueakIn([NotNull] SqueakSpeakParser.SqueakInContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.squeakIn"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSqueakIn([NotNull] SqueakSpeakParser.SqueakInContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.squeakMathCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSqueakMathCall([NotNull] SqueakSpeakParser.SqueakMathCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.squeakMathCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSqueakMathCall([NotNull] SqueakSpeakParser.SqueakMathCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.squeakOut"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSqueakOut([NotNull] SqueakSpeakParser.SqueakOutContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.squeakOut"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSqueakOut([NotNull] SqueakSpeakParser.SqueakOutContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.hugThis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHugThis([NotNull] SqueakSpeakParser.HugThisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.hugThis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHugThis([NotNull] SqueakSpeakParser.HugThisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.snugLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSnugLoop([NotNull] SqueakSpeakParser.SnugLoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.snugLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSnugLoop([NotNull] SqueakSpeakParser.SnugLoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.fluffMagic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFluffMagic([NotNull] SqueakSpeakParser.FluffMagicContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.fluffMagic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFluffMagic([NotNull] SqueakSpeakParser.FluffMagicContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.snuggleIf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSnuggleIf([NotNull] SqueakSpeakParser.SnuggleIfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.snuggleIf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSnuggleIf([NotNull] SqueakSpeakParser.SnuggleIfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.snipChoose"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSnipChoose([NotNull] SqueakSpeakParser.SnipChooseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.snipChoose"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSnipChoose([NotNull] SqueakSpeakParser.SnipChooseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.snipCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSnipCase([NotNull] SqueakSpeakParser.SnipCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.snipCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSnipCase([NotNull] SqueakSpeakParser.SnipCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.snipDefault"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSnipDefault([NotNull] SqueakSpeakParser.SnipDefaultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.snipDefault"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSnipDefault([NotNull] SqueakSpeakParser.SnipDefaultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.bringWarmth"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBringWarmth([NotNull] SqueakSpeakParser.BringWarmthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.bringWarmth"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBringWarmth([NotNull] SqueakSpeakParser.BringWarmthContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.invokeWhimsy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInvokeWhimsy([NotNull] SqueakSpeakParser.InvokeWhimsyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.invokeWhimsy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInvokeWhimsy([NotNull] SqueakSpeakParser.InvokeWhimsyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.purrMath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPurrMath([NotNull] SqueakSpeakParser.PurrMathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.purrMath"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPurrMath([NotNull] SqueakSpeakParser.PurrMathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.leftExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeftExpr([NotNull] SqueakSpeakParser.LeftExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.leftExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeftExpr([NotNull] SqueakSpeakParser.LeftExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.objectCreation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectCreation([NotNull] SqueakSpeakParser.ObjectCreationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.objectCreation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectCreation([NotNull] SqueakSpeakParser.ObjectCreationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.fieldAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldAssignment([NotNull] SqueakSpeakParser.FieldAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.fieldAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldAssignment([NotNull] SqueakSpeakParser.FieldAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] SqueakSpeakParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] SqueakSpeakParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.purrOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPurrOperation([NotNull] SqueakSpeakParser.PurrOperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.purrOperation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPurrOperation([NotNull] SqueakSpeakParser.PurrOperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.purrOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPurrOperator([NotNull] SqueakSpeakParser.PurrOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.purrOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPurrOperator([NotNull] SqueakSpeakParser.PurrOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.fieldAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldAccess([NotNull] SqueakSpeakParser.FieldAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.fieldAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldAccess([NotNull] SqueakSpeakParser.FieldAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.purrTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPurrTerm([NotNull] SqueakSpeakParser.PurrTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.purrTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPurrTerm([NotNull] SqueakSpeakParser.PurrTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.nativeCallExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNativeCallExpr([NotNull] SqueakSpeakParser.NativeCallExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.nativeCallExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNativeCallExpr([NotNull] SqueakSpeakParser.NativeCallExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.baseTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseTerm([NotNull] SqueakSpeakParser.BaseTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.baseTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseTerm([NotNull] SqueakSpeakParser.BaseTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.arrayLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayLiteral([NotNull] SqueakSpeakParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.arrayLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayLiteral([NotNull] SqueakSpeakParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondition([NotNull] SqueakSpeakParser.ConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.condition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondition([NotNull] SqueakSpeakParser.ConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamList([NotNull] SqueakSpeakParser.ParamListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamList([NotNull] SqueakSpeakParser.ParamListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqueakSpeakParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] SqueakSpeakParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqueakSpeakParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] SqueakSpeakParser.ParamContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
